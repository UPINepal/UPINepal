@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components
@using global::Shared
@using global::Shared.Interfaces
@inject ThemeState _themeState
@inject IMenuService _menuService
@inject NavigationManager _uriHelpWer
@inject IJSRuntime _jsWRuntime

@if (Theme != "software.css")
{
    <link href="_content/Radzen.Blazor/css/@(Theme)" rel="stylesheet" />
}
<RadzenDialog />
<RadzenNotification />
<RadzenTooltip />
<RadzenContextMenu />

<RadzenHeader>
    <ChildContent>
        <div class="row justify-content-start align-items-center">
            <div class="col-5 d-flex align-items-center">
                <RadzenSidebarToggle Click="@(args => { sidebarExpanded = !sidebarExpanded; bodyExpanded = !bodyExpanded; })">
                </RadzenSidebarToggle>
                <RadzenLabel Text="@(projectName)">
                </RadzenLabel>
            </div>
            <div class="col-7 d-flex align-items-center justify-content-end">
                <RadzenDropDown class="mx-0 mx-lg-3" TValue="string" TextProperty="Text" ValueProperty="Value" Data="@themes" Value="@_themeState.CurrentTheme" Change="@ChangeTheme" />
            </div>
        </div>
    </ChildContent>
</RadzenHeader>
<div style="width:100%">
    <RadzenBody @ref="@body0" @bind-Expanded="@bodyExpanded">
        <ChildContent>
            <RadzenContentContainer Name="main">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12 pt-4 pb-5 px-3 px-lg-5">
                            @Body
                            <p class="mt-5 md-3 text-center">
                                <RadzenLabel Text=@($"{@DateTime.Now.Year} {projectName} Inc.")></RadzenLabel>
                            </p>
                            <p class="text-center">
                                <Social />
                            </p>
                        </div>
                    </div>
                </div>
            </RadzenContentContainer>
        </ChildContent>
    </RadzenBody>
</div>
<RadzenSidebar @ref="@sidebar0" @bind-Expanded="@sidebarExpanded">
    <ChildContent>
        <div style="padding: 1rem">
            <RadzenTextBox Placeholder="Find component ..." type="search" @oninput="@FilterPanelMenu" style="width: 100%" />
        </div>
        <RadzenPanelMenu>
            @foreach (var category in examples)
            {
                <RadzenPanelMenuItem @bind-Expanded="@category.Expanded" Text="@category.Name" Path="@category.Path" Icon="@category.Icon">
                    </RadzenPanelMenuItem>
            }
        </RadzenPanelMenu>
    </ChildContent>
</RadzenSidebar>

@code {

    string projectName = "Project Name";
    RadzenSidebar sidebar0;
    RadzenBody body0;
    bool sidebarExpanded = true;
    bool bodyExpanded = false;

    dynamic themes = new[]
        {
        new {Text = "Default Theme", Value = "default"},
        new {Text = "Dark Theme", Value = "dark"},
        new {Text = "Software Theme", Value = "software"},
        new {Text = "Humanistic Theme", Value = "humanistic"}
    };

    IEnumerable<MenuClass> examples;

    string Theme
    {
        get { return $"{_themeState.CurrentTheme}.css"; }
    }

    protected override void OnInitialized()
    {
        examples = _menuService.Examples;
        System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo("en-US");
    }

    void FilterPanelMenu(ChangeEventArgs args)
    {
        var term = args.Value.ToString();

        examples = _menuService.Filter(term);
    }

    void ChangeTheme(object value)
    {
        _themeState.CurrentTheme = value.ToString();
        _uriHelpWer.NavigateTo(_uriHelpWer.ToAbsoluteUri(_uriHelpWer.Uri).ToString());
    }

}
